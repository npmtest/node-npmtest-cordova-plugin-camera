{"/home/travis/build/npmtest/node-npmtest-cordova-plugin-camera/test.js":"/* istanbul instrument in package npmtest_cordova_plugin_camera */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - init-after\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - init-after\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-cordova-plugin-camera/lib.npmtest_cordova_plugin_camera.js":"/* istanbul instrument in package npmtest_cordova_plugin_camera */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_cordova_plugin_camera = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_cordova_plugin_camera = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-cordova-plugin-camera/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-cordova-plugin-camera && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_cordova_plugin_camera */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_cordova_plugin_camera\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // init-after\n    // run browser js-env code - init-after\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_cordova_plugin_camera.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_cordova_plugin_camera.rollup.js'] =\n            local.assetsDict['/assets.npmtest_cordova_plugin_camera.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_cordova_plugin_camera.__dirname + '/lib.npmtest_cordova_plugin_camera.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-cordova-plugin-camera/node_modules/cordova-plugin-camera/www/CameraConstants.js":"/*\n *\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n *\n*/\n\n/**\n * @module Camera\n */\nmodule.exports = {\n  /**\n   * @description\n   * Defines the output format of `Camera.getPicture` call.\n   * _Note:_ On iOS passing `DestinationType.NATIVE_URI` along with\n   * `PictureSourceType.PHOTOLIBRARY` or `PictureSourceType.SAVEDPHOTOALBUM` will\n   * disable any image modifications (resize, quality change, cropping, etc.) due\n   * to implementation specific.\n   *\n   * @enum {number}\n   */\n  DestinationType:{\n    /** Return base64 encoded string. DATA_URL can be very memory intensive and cause app crashes or out of memory errors. Use FILE_URI or NATIVE_URI if possible */\n    DATA_URL: 0,\n    /** Return file uri (content://media/external/images/media/2 for Android) */\n    FILE_URI: 1,\n    /** Return native uri (eg. asset-library://... for iOS) */\n    NATIVE_URI: 2\n  },\n  /**\n   * @enum {number}\n   */\n  EncodingType:{\n    /** Return JPEG encoded image */\n    JPEG: 0,\n    /** Return PNG encoded image */\n    PNG: 1\n  },\n  /**\n   * @enum {number}\n   */\n  MediaType:{\n    /** Allow selection of still pictures only. DEFAULT. Will return format specified via DestinationType */\n    PICTURE: 0,\n    /** Allow selection of video only, ONLY RETURNS URL */\n    VIDEO: 1,\n    /** Allow selection from all media types */\n    ALLMEDIA : 2\n  },\n  /**\n   * @description\n   * Defines the output format of `Camera.getPicture` call.\n   * _Note:_ On iOS passing `PictureSourceType.PHOTOLIBRARY` or `PictureSourceType.SAVEDPHOTOALBUM`\n   * along with `DestinationType.NATIVE_URI` will disable any image modifications (resize, quality\n   * change, cropping, etc.) due to implementation specific.\n   *\n   * @enum {number}\n   */\n  PictureSourceType:{\n    /** Choose image from the device's photo library (same as SAVEDPHOTOALBUM for Android) */\n    PHOTOLIBRARY : 0,\n    /** Take picture from camera */\n    CAMERA : 1,\n    /** Choose image only from the device's Camera Roll album (same as PHOTOLIBRARY for Android) */\n    SAVEDPHOTOALBUM : 2\n  },\n  /**\n   * Matches iOS UIPopoverArrowDirection constants to specify arrow location on popover.\n   * @enum {number}\n   */\n  PopoverArrowDirection:{\n      ARROW_UP : 1,\n      ARROW_DOWN : 2,\n      ARROW_LEFT : 4,\n      ARROW_RIGHT : 8,\n      ARROW_ANY : 15\n  },\n  /**\n   * @enum {number}\n   */\n  Direction:{\n      /** Use the back-facing camera */\n      BACK: 0,\n      /** Use the front-facing camera */\n      FRONT: 1\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-cordova-plugin-camera/node_modules/cordova-plugin-camera/www/Camera.js":"/*\n *\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n *\n*/\n\nvar argscheck = require('cordova/argscheck'),\n    exec = require('cordova/exec'),\n    Camera = require('./Camera');\n    // XXX: commented out\n    //CameraPopoverHandle = require('./CameraPopoverHandle');\n\n/**\n * @namespace navigator\n */\n\n/**\n * @exports camera\n */\nvar cameraExport = {};\n\n// Tack on the Camera Constants to the base camera plugin.\nfor (var key in Camera) {\n    cameraExport[key] = Camera[key];\n}\n\n/**\n * Callback function that provides an error message.\n * @callback module:camera.onError\n * @param {string} message - The message is provided by the device's native code.\n */\n\n/**\n * Callback function that provides the image data.\n * @callback module:camera.onSuccess\n * @param {string} imageData - Base64 encoding of the image data, _or_ the image file URI, depending on [`cameraOptions`]{@link module:camera.CameraOptions} in effect.\n * @example\n * // Show image\n * //\n * function cameraCallback(imageData) {\n *    var image = document.getElementById('myImage');\n *    image.src = \"data:image/jpeg;base64,\" + imageData;\n * }\n */\n\n/**\n * Optional parameters to customize the camera settings.\n * * [Quirks](#CameraOptions-quirks)\n * @typedef module:camera.CameraOptions\n * @type {Object}\n * @property {number} [quality=50] - Quality of the saved image, expressed as a range of 0-100, where 100 is typically full resolution with no loss from file compression. (Note that information about the camera's resolution is unavailable.)\n * @property {module:Camera.DestinationType} [destinationType=FILE_URI] - Choose the format of the return value.\n * @property {module:Camera.PictureSourceType} [sourceType=CAMERA] - Set the source of the picture.\n * @property {Boolean} [allowEdit=true] - Allow simple editing of image before selection.\n * @property {module:Camera.EncodingType} [encodingType=JPEG] - Choose the  returned image file's encoding.\n * @property {number} [targetWidth] - Width in pixels to scale image. Must be used with `targetHeight`. Aspect ratio remains constant.\n * @property {number} [targetHeight] - Height in pixels to scale image. Must be used with `targetWidth`. Aspect ratio remains constant.\n * @property {module:Camera.MediaType} [mediaType=PICTURE] - Set the type of media to select from.  Only works when `PictureSourceType` is `PHOTOLIBRARY` or `SAVEDPHOTOALBUM`.\n * @property {Boolean} [correctOrientation] - Rotate the image to correct for the orientation of the device during capture.\n * @property {Boolean} [saveToPhotoAlbum] - Save the image to the photo album on the device after capture.\n * @property {module:CameraPopoverOptions} [popoverOptions] - iOS-only options that specify popover location in iPad.\n * @property {module:Camera.Direction} [cameraDirection=BACK] - Choose the camera to use (front- or back-facing).\n */\n\n/**\n * @description Takes a photo using the camera, or retrieves a photo from the device's\n * image gallery.  The image is passed to the success callback as a\n * Base64-encoded `String`, or as the URI for the image file.\n *\n * The `camera.getPicture` function opens the device's default camera\n * application that allows users to snap pictures by default - this behavior occurs,\n * when `Camera.sourceType` equals [`Camera.PictureSourceType.CAMERA`]{@link module:Camera.PictureSourceType}.\n * Once the user snaps the photo, the camera application closes and the application is restored.\n *\n * If `Camera.sourceType` is `Camera.PictureSourceType.PHOTOLIBRARY` or\n * `Camera.PictureSourceType.SAVEDPHOTOALBUM`, then a dialog displays\n * that allows users to select an existing image.\n *\n * The return value is sent to the [`cameraSuccess`]{@link module:camera.onSuccess} callback function, in\n * one of the following formats, depending on the specified\n * `cameraOptions`:\n *\n * - A `String` containing the Base64-encoded photo image.\n * - A `String` representing the image file location on local storage (default).\n *\n * You can do whatever you want with the encoded image or URI, for\n * example:\n *\n * - Render the image in an `<img>` tag, as in the example below\n * - Save the data locally (`LocalStorage`, [Lawnchair](http://brianleroux.github.com/lawnchair/), etc.)\n * - Post the data to a remote server\n *\n * __NOTE__: Photo resolution on newer devices is quite good. Photos\n * selected from the device's gallery are not downscaled to a lower\n * quality, even if a `quality` parameter is specified.  To avoid common\n * memory problems, set `Camera.destinationType` to `FILE_URI` rather\n * than `DATA_URL`.\n *\n * __Supported Platforms__\n *\n * - Android\n * - BlackBerry\n * - Browser\n * - Firefox\n * - FireOS\n * - iOS\n * - Windows\n * - WP8\n * - Ubuntu\n *\n * More examples [here](#camera-getPicture-examples). Quirks [here](#camera-getPicture-quirks).\n *\n * @example\n * navigator.camera.getPicture(cameraSuccess, cameraError, cameraOptions);\n * @param {module:camera.onSuccess} successCallback\n * @param {module:camera.onError} errorCallback\n * @param {module:camera.CameraOptions} options CameraOptions\n */\ncameraExport.getPicture = function(successCallback, errorCallback, options) {\n    argscheck.checkArgs('fFO', 'Camera.getPicture', arguments);\n    options = options || {};\n    var getValue = argscheck.getValue;\n\n    var quality = getValue(options.quality, 50);\n    var destinationType = getValue(options.destinationType, Camera.DestinationType.FILE_URI);\n    var sourceType = getValue(options.sourceType, Camera.PictureSourceType.CAMERA);\n    var targetWidth = getValue(options.targetWidth, -1);\n    var targetHeight = getValue(options.targetHeight, -1);\n    var encodingType = getValue(options.encodingType, Camera.EncodingType.JPEG);\n    var mediaType = getValue(options.mediaType, Camera.MediaType.PICTURE);\n    var allowEdit = !!options.allowEdit;\n    var correctOrientation = !!options.correctOrientation;\n    var saveToPhotoAlbum = !!options.saveToPhotoAlbum;\n    var popoverOptions = getValue(options.popoverOptions, null);\n    var cameraDirection = getValue(options.cameraDirection, Camera.Direction.BACK);\n\n    var args = [quality, destinationType, sourceType, targetWidth, targetHeight, encodingType,\n                mediaType, allowEdit, correctOrientation, saveToPhotoAlbum, popoverOptions, cameraDirection];\n\n    exec(successCallback, errorCallback, \"Camera\", \"takePicture\", args);\n    // XXX: commented out\n    //return new CameraPopoverHandle();\n};\n\n/**\n * Removes intermediate image files that are kept in temporary storage\n * after calling [`camera.getPicture`]{@link module:camera.getPicture}. Applies only when the value of\n * `Camera.sourceType` equals `Camera.PictureSourceType.CAMERA` and the\n * `Camera.destinationType` equals `Camera.DestinationType.FILE_URI`.\n *\n * __Supported Platforms__\n *\n * - iOS\n *\n * @example\n * navigator.camera.cleanup(onSuccess, onFail);\n *\n * function onSuccess() {\n *     console.log(\"Camera cleanup success.\")\n * }\n *\n * function onFail(message) {\n *     alert('Failed because: ' + message);\n * }\n */\ncameraExport.cleanup = function(successCallback, errorCallback) {\n    exec(successCallback, errorCallback, \"Camera\", \"cleanup\", []);\n};\n\nmodule.exports = cameraExport;\n","/home/travis/build/npmtest/node-npmtest-cordova-plugin-camera/node_modules/cordova-plugin-camera/www/CameraPopoverHandle.js":"/*\n *\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n *\n*/\n\n/**\n * @ignore in favour of iOS' one\n * A handle to an image picker popover.\n */\nvar CameraPopoverHandle = function() {\n    this.setPosition = function(popoverOptions) {\n        console.log('CameraPopoverHandle.setPosition is only supported on iOS.');\n    };\n};\n\nmodule.exports = CameraPopoverHandle;\n","/home/travis/build/npmtest/node-npmtest-cordova-plugin-camera/node_modules/cordova-plugin-camera/www/CameraPopoverOptions.js":"/*\n *\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n *\n*/\n\nvar Camera = require('./Camera');\n\n/** \n * @namespace navigator\n */\n\n/**\n * iOS-only parameters that specify the anchor element location and arrow\n * direction of the popover when selecting images from an iPad's library\n * or album.\n * Note that the size of the popover may change to adjust to the\n * direction of the arrow and orientation of the screen.  Make sure to\n * account for orientation changes when specifying the anchor element\n * location.\n * @module CameraPopoverOptions\n * @param {Number} [x=0] - x pixel coordinate of screen element onto which to anchor the popover.\n * @param {Number} [y=32] - y pixel coordinate of screen element onto which to anchor the popover.\n * @param {Number} [width=320] - width, in pixels, of the screen element onto which to anchor the popover.\n * @param {Number} [height=480] - height, in pixels, of the screen element onto which to anchor the popover.\n * @param {module:Camera.PopoverArrowDirection} [arrowDir=ARROW_ANY] - Direction the arrow on the popover should point.\n */\nvar CameraPopoverOptions = function (x, y, width, height, arrowDir) {\n    // information of rectangle that popover should be anchored to\n    this.x = x || 0;\n    this.y = y || 32;\n    this.width = width || 320;\n    this.height = height || 480;\n    this.arrowDir = arrowDir || Camera.PopoverArrowDirection.ARROW_ANY;\n};\n\nmodule.exports = CameraPopoverOptions;\n","/home/travis/build/npmtest/node-npmtest-cordova-plugin-camera/node_modules/cordova-plugin-camera/src/blackberry10/index.js":"/*\n *\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n *\n*/\n\n/* globals qnx, FileError, PluginResult */\n\nvar PictureSourceType = {\n        PHOTOLIBRARY : 0,    // Choose image from picture library (same as SAVEDPHOTOALBUM for Android)\n        CAMERA : 1,          // Take picture from camera\n        SAVEDPHOTOALBUM : 2  // Choose image from picture library (same as PHOTOLIBRARY for Android)\n    },\n    DestinationType = {\n        DATA_URL: 0,         // Return base64 encoded string\n        FILE_URI: 1,         // Return file uri (content://media/external/images/media/2 for Android)\n        NATIVE_URI: 2        // Return native uri (eg. asset-library://... for iOS)\n    },\n    savePath = window.qnx.webplatform.getApplication().getEnv(\"HOME\").replace('/data', '') + '/shared/camera/',\n    invokeAvailable = true;\n\n//check for camera card - it isn't currently availble in work perimeter\nwindow.qnx.webplatform.getApplication().invocation.queryTargets(\n    {\n        type: 'image/jpeg',\n        action: 'bb.action.CAPTURE',\n        target_type: 'CARD'\n    },\n    function (error, targets) {\n        invokeAvailable = !error && targets && targets instanceof Array &&\n            targets.filter(function (t) { return t.default === 'sys.camera.card'; }).length > 0;\n    }\n);\n\n//open a webview with getUserMedia camera card implementation when camera card not available\nfunction showCameraDialog (done, cancel, fail) {\n    var wv = qnx.webplatform.createWebView(function () {\n        wv.url = 'local:///chrome/camera.html';\n        wv.allowQnxObject = true;\n        wv.allowRpc = true;\n        wv.zOrder = 1;\n        wv.setGeometry(0, 0, screen.width, screen.height);\n        wv.backgroundColor = 0x00000000;\n        wv.active = true;\n        wv.visible = true;\n        wv.on('UserMediaRequest', function (evt, args) {\n            wv.allowUserMedia(JSON.parse(args).id, 'CAMERA_UNIT_REAR');\n        });\n        wv.on('JavaScriptCallback', function (evt, data) {\n            var args = JSON.parse(data).args;\n            if (args[0] === 'cordova-plugin-camera') {\n                if (args[1] === 'cancel') {\n                    cancel('User canceled');\n                } else if (args[1] === 'error') {\n                    fail(args[2]);\n                } else {\n                    saveImage(args[1], done, fail);\n                }\n                wv.un('JavaScriptCallback', arguments.callee);\n                wv.visible = false;\n                wv.destroy();\n                qnx.webplatform.getApplication().unlockRotation();\n            }\n        });\n        wv.on('Destroyed', function () {\n            wv.delete();\n        });\n        qnx.webplatform.getApplication().lockRotation();\n        qnx.webplatform.getController().dispatchEvent('webview.initialized', [wv]);\n    });\n}\n\n//create unique name for saved file (same pattern as BB10 camera app)\nfunction imgName() {\n    var date = new Date(),\n        pad = function (n) { return n < 10 ? '0' + n : n; };\n    return 'IMG_' + date.getFullYear() + pad(date.getMonth() + 1) + pad(date.getDate()) + '_' +\n            pad(date.getHours()) + pad(date.getMinutes()) + pad(date.getSeconds()) + '.png';\n}\n\n//convert dataURI to Blob\nfunction dataURItoBlob(dataURI) {\n    var byteString = atob(dataURI.split(',')[1]),\n        mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0],\n        arrayBuffer = new ArrayBuffer(byteString.length),\n        ia = new Uint8Array(arrayBuffer),\n        i;\n    for (i = 0; i < byteString.length; i++) {\n        ia[i] = byteString.charCodeAt(i);\n    }\n    return new Blob([new DataView(arrayBuffer)], { type: mimeString });\n}\n\n//save dataURI to file system and call success with path\nfunction saveImage(data, success, fail) {\n    var name = savePath + imgName();\n    require('lib/webview').setSandbox(false);\n    window.webkitRequestFileSystem(window.PERSISTENT, 0, function (fs) {\n        fs.root.getFile(name, { create: true }, function (entry) {\n            entry.createWriter(function (writer) {\n                writer.onwriteend = function () {\n                    success(name);\n                };\n                writer.onerror = fail;\n                writer.write(dataURItoBlob(data));\n            });\n        }, fail);\n    }, fail);\n}\n\nfunction encodeBase64(filePath, callback) {\n    var sandbox = window.qnx.webplatform.getController().setFileSystemSandbox, // save original sandbox value\n        errorHandler = function (err) {\n            var msg = \"An error occured: \";\n\n            switch (err.code) {\n            case FileError.NOT_FOUND_ERR:\n                msg += \"File or directory not found\";\n                break;\n\n            case FileError.NOT_READABLE_ERR:\n                msg += \"File or directory not readable\";\n                break;\n\n            case FileError.PATH_EXISTS_ERR:\n                msg += \"File or directory already exists\";\n                break;\n\n            case FileError.TYPE_MISMATCH_ERR:\n                msg += \"Invalid file type\";\n                break;\n\n            default:\n                msg += \"Unknown Error\";\n                break;\n            }\n\n            // set it back to original value\n            window.qnx.webplatform.getController().setFileSystemSandbox = sandbox;\n            callback(msg);\n        },\n        gotFile = function (fileEntry) {\n            fileEntry.file(function (file) {\n                var reader = new FileReader();\n\n                reader.onloadend = function (e) {\n                    // set it back to original value\n                    window.qnx.webplatform.getController().setFileSystemSandbox = sandbox;\n                    callback(this.result);\n                };\n\n                reader.readAsDataURL(file);\n            }, errorHandler);\n        },\n        onInitFs = function (fs) {\n            window.qnx.webplatform.getController().setFileSystemSandbox = false;\n            fs.root.getFile(filePath, {create: false}, gotFile, errorHandler);\n        };\n\n    window.webkitRequestFileSystem(window.TEMPORARY, 10 * 1024 * 1024, onInitFs, errorHandler); // set size to 10MB max\n}\n\nmodule.exports = {\n    takePicture: function (success, fail, args, env) {\n        var destinationType = JSON.parse(decodeURIComponent(args[1])),\n            sourceType = JSON.parse(decodeURIComponent(args[2])),\n            result = new PluginResult(args, env),\n            done = function (data) {\n                if (destinationType === DestinationType.FILE_URI) {\n                    data = \"file://\" + data;\n                    result.callbackOk(data, false);\n                } else {\n                    encodeBase64(data, function (data) {\n                        if (/^data:/.test(data)) {\n                            data = data.slice(data.indexOf(\",\") + 1);\n                            result.callbackOk(data, false);\n                        } else {\n                            result.callbackError(data, false);\n                        }\n                    });\n                }\n            },\n            cancel = function (reason) {\n                result.callbackError(reason, false);\n            },\n            invoked = function (error) {\n                if (error) {\n                    result.callbackError(error, false);\n                }\n            };\n\n        switch(sourceType) {\n        case PictureSourceType.CAMERA:\n            if (invokeAvailable) {\n                window.qnx.webplatform.getApplication().cards.camera.open(\"photo\", done, cancel, invoked);\n            } else {\n                showCameraDialog(done, cancel, fail);\n            }\n            break;\n\n        case PictureSourceType.PHOTOLIBRARY:\n        case PictureSourceType.SAVEDPHOTOALBUM:\n            window.qnx.webplatform.getApplication().cards.filePicker.open({\n                mode: \"Picker\",\n                type: [\"picture\"]\n            }, done, cancel, invoked);\n            break;\n        }\n\n        result.noResult(true);\n    }\n};\n","/home/travis/build/npmtest/node-npmtest-cordova-plugin-camera/node_modules/cordova-plugin-camera/src/browser/CameraProxy.js":"/*\n *\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n *\n */\n\nvar HIGHEST_POSSIBLE_Z_INDEX = 2147483647;\n\nfunction takePicture(success, error, opts) {\n    if (opts && opts[2] === 1) {\n        capture(success, error, opts);\n    } else {\n        var input = document.createElement('input');\n        input.style.position = 'relative';\n        input.style.zIndex = HIGHEST_POSSIBLE_Z_INDEX;\n        input.className = 'cordova-camera-select';\n        input.type = 'file';\n        input.name = 'files[]';\n\n        input.onchange = function(inputEvent) {\n            var reader = new FileReader();\n            reader.onload = function(readerEvent) {\n                input.parentNode.removeChild(input);\n\n                var imageData = readerEvent.target.result;\n\n                return success(imageData.substr(imageData.indexOf(',') + 1));\n            };\n\n            reader.readAsDataURL(inputEvent.target.files[0]);\n        };\n\n        document.body.appendChild(input);\n    }\n}\n\nfunction capture(success, errorCallback, opts) {\n    var localMediaStream;\n    var targetWidth = opts[3];\n    var targetHeight = opts[4];\n\n    targetWidth = targetWidth == -1?320:targetWidth;\n    targetHeight = targetHeight == -1?240:targetHeight;\n\n    var video = document.createElement('video');\n    var button = document.createElement('button');\n    var parent = document.createElement('div');\n    parent.style.position = 'relative';\n    parent.style.zIndex = HIGHEST_POSSIBLE_Z_INDEX;\n    parent.className = 'cordova-camera-capture';\n    parent.appendChild(video);\n    parent.appendChild(button);\n\n    video.width = targetWidth;\n    video.height = targetHeight;\n    button.innerHTML = 'Capture!';\n\n    button.onclick = function() {\n        // create a canvas and capture a frame from video stream\n        var canvas = document.createElement('canvas');\n        canvas.width = targetWidth;\n        canvas.height = targetHeight;\n        canvas.getContext('2d').drawImage(video, 0, 0, targetWidth, targetHeight);\n\n        // convert image stored in canvas to base64 encoded image\n        var imageData = canvas.toDataURL('image/png');\n        imageData = imageData.replace('data:image/png;base64,', '');\n\n        // stop video stream, remove video and button.\n        // Note that MediaStream.stop() is deprecated as of Chrome 47.\n        if (localMediaStream.stop) {\n            localMediaStream.stop();\n        } else {\n            localMediaStream.getTracks().forEach(function (track) {\n                track.stop();\n            });\n        }\n        parent.parentNode.removeChild(parent);\n\n        return success(imageData);\n    };\n\n    navigator.getUserMedia = navigator.getUserMedia ||\n                             navigator.webkitGetUserMedia ||\n                             navigator.mozGetUserMedia ||\n                             navigator.msGetUserMedia;\n\n    var successCallback = function(stream) {\n        localMediaStream = stream;\n        video.src = window.URL.createObjectURL(localMediaStream);\n        video.play();\n\n        document.body.appendChild(parent);\n    };\n\n    if (navigator.getUserMedia) {\n        navigator.getUserMedia({video: true, audio: true}, successCallback, errorCallback);\n    } else {\n        alert('Browser does not support camera :(');\n    }\n}\n\nmodule.exports = {\n    takePicture: takePicture,\n    cleanup: function(){}\n};\n\nrequire(\"cordova/exec/proxy\").add(\"Camera\",module.exports);\n","/home/travis/build/npmtest/node-npmtest-cordova-plugin-camera/node_modules/cordova-plugin-camera/src/firefoxos/CameraProxy.js":"/*\n *\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n *\n */\n\n/* globals MozActivity */\n\nfunction takePicture(success, error, opts) {\n    var pick = new MozActivity({\n        name: \"pick\",\n        data: {\n            type: [\"image/*\"]\n        }\n    });\n\n    pick.onerror = error || function() {};\n\n    pick.onsuccess = function() {\n        // image is returned as Blob in this.result.blob\n        // we need to call success with url or base64 encoded image\n        if (opts && opts.destinationType === 0) {\n            // TODO: base64\n            return;\n        }\n        if (!opts || !opts.destinationType || opts.destinationType > 0) {\n            // url\n            return success(window.URL.createObjectURL(this.result.blob));\n        }\n    };\n}\n\nmodule.exports = {\n    takePicture: takePicture,\n    cleanup: function(){}\n};\n\nrequire(\"cordova/exec/proxy\").add(\"Camera\", module.exports);\n","/home/travis/build/npmtest/node-npmtest-cordova-plugin-camera/node_modules/cordova-plugin-camera/src/windows/CameraProxy.js":"/*\n *\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n *\n*/\n\n/*jshint unused:true, undef:true, browser:true */\n/*global Windows:true, URL:true, module:true, require:true, WinJS:true */\n\n\nvar Camera = require('./Camera');\n\n\nvar getAppData = function () {\n    return Windows.Storage.ApplicationData.current;\n};\nvar encodeToBase64String = function (buffer) {\n    return Windows.Security.Cryptography.CryptographicBuffer.encodeToBase64String(buffer);\n};\nvar OptUnique = Windows.Storage.CreationCollisionOption.generateUniqueName;\nvar CapMSType = Windows.Media.Capture.MediaStreamType;\nvar webUIApp = Windows.UI.WebUI.WebUIApplication;\nvar fileIO = Windows.Storage.FileIO;\nvar pickerLocId = Windows.Storage.Pickers.PickerLocationId;\n\nmodule.exports = {\n\n    // args will contain :\n    //  ...  it is an array, so be careful\n    // 0 quality:50,\n    // 1 destinationType:Camera.DestinationType.FILE_URI,\n    // 2 sourceType:Camera.PictureSourceType.CAMERA,\n    // 3 targetWidth:-1,\n    // 4 targetHeight:-1,\n    // 5 encodingType:Camera.EncodingType.JPEG,\n    // 6 mediaType:Camera.MediaType.PICTURE,\n    // 7 allowEdit:false,\n    // 8 correctOrientation:false,\n    // 9 saveToPhotoAlbum:false,\n    // 10 popoverOptions:null\n    // 11 cameraDirection:0\n\n    takePicture: function (successCallback, errorCallback, args) {\n        var sourceType = args[2];\n\n        if (sourceType != Camera.PictureSourceType.CAMERA) {\n            takePictureFromFile(successCallback, errorCallback, args);\n        } else {\n            takePictureFromCamera(successCallback, errorCallback, args);\n        }\n    }\n};\n\n// https://msdn.microsoft.com/en-us/library/windows/apps/ff462087(v=vs.105).aspx\nvar windowsVideoContainers = [\".avi\", \".flv\", \".asx\", \".asf\", \".mov\", \".mp4\", \".mpg\", \".rm\", \".srt\", \".swf\", \".wmv\", \".vob\"];\nvar windowsPhoneVideoContainers =  [\".avi\", \".3gp\", \".3g2\", \".wmv\", \".3gp\", \".3g2\", \".mp4\", \".m4v\"];\n\n// Default aspect ratio 1.78 (16:9 hd video standard)\nvar DEFAULT_ASPECT_RATIO = '1.8';\n\n// Highest possible z-index supported across browsers. Anything used above is converted to this value.\nvar HIGHEST_POSSIBLE_Z_INDEX = 2147483647;\n\n// Resize method\nfunction resizeImage(successCallback, errorCallback, file, targetWidth, targetHeight, encodingType) {\n    var tempPhotoFileName = \"\";\n    var targetContentType = \"\";\n\n    if (encodingType == Camera.EncodingType.PNG) {\n        tempPhotoFileName = \"camera_cordova_temp_return.png\";\n        targetContentType = \"image/png\";\n    } else {\n        tempPhotoFileName = \"camera_cordova_temp_return.jpg\";\n        targetContentType = \"image/jpeg\";\n    }\n\n    var storageFolder = getAppData().localFolder;\n    file.copyAsync(storageFolder, file.name, Windows.Storage.NameCollisionOption.replaceExisting)\n        .then(function (storageFile) {\n            return fileIO.readBufferAsync(storageFile);\n        })\n        .then(function(buffer) {\n            var strBase64 = encodeToBase64String(buffer);\n            var imageData = \"data:\" + file.contentType + \";base64,\" + strBase64;\n            var image = new Image();\n            image.src = imageData;\n            image.onload = function() {\n                var ratio = Math.min(targetWidth / this.width, targetHeight / this.height);\n                var imageWidth = ratio * this.width;\n                var imageHeight = ratio * this.height;\n\n                var canvas = document.createElement('canvas');\n                var storageFileName;\n\n                canvas.width = imageWidth;\n                canvas.height = imageHeight;\n\n                canvas.getContext(\"2d\").drawImage(this, 0, 0, imageWidth, imageHeight);\n\n                var fileContent = canvas.toDataURL(targetContentType).split(',')[1];\n\n                var storageFolder = getAppData().localFolder;\n\n                storageFolder.createFileAsync(tempPhotoFileName, OptUnique)\n                    .then(function (storagefile) {\n                        var content = Windows.Security.Cryptography.CryptographicBuffer.decodeFromBase64String(fileContent);\n                        storageFileName = storagefile.name;\n                        return fileIO.writeBufferAsync(storagefile, content);\n                    })\n                    .done(function () {\n                        successCallback(\"ms-appdata:///local/\" + storageFileName);\n                    }, errorCallback);\n            };\n        })\n        .done(null, function(err) {\n            errorCallback(err);\n        }\n    );\n}\n\n// Because of asynchronous method, so let the successCallback be called in it.\nfunction resizeImageBase64(successCallback, errorCallback, file, targetWidth, targetHeight) {\n    fileIO.readBufferAsync(file).done( function(buffer) {\n        var strBase64 = encodeToBase64String(buffer);\n        var imageData = \"data:\" + file.contentType + \";base64,\" + strBase64;\n\n        var image = new Image();\n        image.src = imageData;\n\n        image.onload = function() {\n            var ratio = Math.min(targetWidth / this.width, targetHeight / this.height);\n            var imageWidth = ratio * this.width;\n            var imageHeight = ratio * this.height;\n            var canvas = document.createElement('canvas');\n\n            canvas.width = imageWidth;\n            canvas.height = imageHeight;\n\n            var ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(this, 0, 0, imageWidth, imageHeight);\n\n            // The resized file ready for upload\n            var finalFile = canvas.toDataURL(file.contentType);\n\n            // Remove the prefix such as \"data:\" + contentType + \";base64,\" , in order to meet the Cordova API.\n            var arr = finalFile.split(\",\");\n            var newStr = finalFile.substr(arr[0].length + 1);\n            successCallback(newStr);\n        };\n    }, function(err) { errorCallback(err); });\n}\n\nfunction takePictureFromFile(successCallback, errorCallback, args) {\n    // Detect Windows Phone\n    if (navigator.appVersion.indexOf('Windows Phone 8.1') >= 0) {\n        takePictureFromFileWP(successCallback, errorCallback, args);\n    } else {\n        takePictureFromFileWindows(successCallback, errorCallback, args);\n    }\n}\n\nfunction takePictureFromFileWP(successCallback, errorCallback, args) {\n    var mediaType = args[6],\n        destinationType = args[1],\n        targetWidth = args[3],\n        targetHeight = args[4],\n        encodingType = args[5];\n\n    /*\n        Need to add and remove an event listener to catch activation state\n        Using FileOpenPicker will suspend the app and it's required to catch the PickSingleFileAndContinue\n        https://msdn.microsoft.com/en-us/library/windows/apps/xaml/dn631755.aspx\n    */\n    var filePickerActivationHandler = function(eventArgs) {\n        if (eventArgs.kind === Windows.ApplicationModel.Activation.ActivationKind.pickFileContinuation) {\n            var file = eventArgs.files[0];\n            if (!file) {\n                errorCallback(\"User didn't choose a file.\");\n                webUIApp.removeEventListener(\"activated\", filePickerActivationHandler);\n                return;\n            }\n            if (destinationType == Camera.DestinationType.FILE_URI || destinationType == Camera.DestinationType.NATIVE_URI) {\n                if (targetHeight > 0 && targetWidth > 0) {\n                    resizeImage(successCallback, errorCallback, file, targetWidth, targetHeight, encodingType);\n                }\n                else {\n                    var storageFolder = getAppData().localFolder;\n                    file.copyAsync(storageFolder, file.name, Windows.Storage.NameCollisionOption.replaceExisting).done(function (storageFile) {\n                        if(destinationType == Camera.DestinationType.NATIVE_URI) {\n                            successCallback(\"ms-appdata:///local/\" + storageFile.name);\n                        }\n                        else {\n                            successCallback(URL.createObjectURL(storageFile));\n                        }\n                    }, function () {\n                        errorCallback(\"Can't access localStorage folder.\");\n                    });\n                }\n            }\n            else {\n                if (targetHeight > 0 && targetWidth > 0) {\n                    resizeImageBase64(successCallback, errorCallback, file, targetWidth, targetHeight);\n                } else {\n                    fileIO.readBufferAsync(file).done(function (buffer) {\n                        var strBase64 =encodeToBase64String(buffer);\n                        successCallback(strBase64);\n                    }, errorCallback);\n                }\n            }\n            webUIApp.removeEventListener(\"activated\", filePickerActivationHandler);\n        }\n    };\n\n    var fileOpenPicker = new Windows.Storage.Pickers.FileOpenPicker();\n    if (mediaType == Camera.MediaType.PICTURE) {\n        fileOpenPicker.fileTypeFilter.replaceAll([\".png\", \".jpg\", \".jpeg\"]);\n        fileOpenPicker.suggestedStartLocation = pickerLocId.picturesLibrary;\n    }\n    else if (mediaType == Camera.MediaType.VIDEO) {\n        fileOpenPicker.fileTypeFilter.replaceAll(windowsPhoneVideoContainers);\n        fileOpenPicker.suggestedStartLocation = pickerLocId.videosLibrary;\n    }\n    else {\n        fileOpenPicker.fileTypeFilter.replaceAll([\"*\"]);\n        fileOpenPicker.suggestedStartLocation = pickerLocId.documentsLibrary;\n    }\n\n    webUIApp.addEventListener(\"activated\", filePickerActivationHandler);\n    fileOpenPicker.pickSingleFileAndContinue();\n}\n\nfunction takePictureFromFileWindows(successCallback, errorCallback, args) {\n    var mediaType = args[6],\n        destinationType = args[1],\n        targetWidth = args[3],\n        targetHeight = args[4],\n        encodingType = args[5];\n\n    var fileOpenPicker = new Windows.Storage.Pickers.FileOpenPicker();\n    if (mediaType == Camera.MediaType.PICTURE) {\n        fileOpenPicker.fileTypeFilter.replaceAll([\".png\", \".jpg\", \".jpeg\"]);\n        fileOpenPicker.suggestedStartLocation = pickerLocId.picturesLibrary;\n    }\n    else if (mediaType == Camera.MediaType.VIDEO) {\n        fileOpenPicker.fileTypeFilter.replaceAll(windowsVideoContainers);\n        fileOpenPicker.suggestedStartLocation = pickerLocId.videosLibrary;\n    }\n    else {\n        fileOpenPicker.fileTypeFilter.replaceAll([\"*\"]);\n        fileOpenPicker.suggestedStartLocation = pickerLocId.documentsLibrary;\n    }\n\n    fileOpenPicker.pickSingleFileAsync().done(function (file) {\n        if (!file) {\n            errorCallback(\"User didn't choose a file.\");\n            return;\n        }\n        if (destinationType == Camera.DestinationType.FILE_URI || destinationType == Camera.DestinationType.NATIVE_URI) {\n            if (targetHeight > 0 && targetWidth > 0) {\n                resizeImage(successCallback, errorCallback, file, targetWidth, targetHeight, encodingType);\n            }\n            else {\n                var storageFolder = getAppData().localFolder;\n                file.copyAsync(storageFolder, file.name, Windows.Storage.NameCollisionOption.replaceExisting).done(function (storageFile) {\n                        if(destinationType == Camera.DestinationType.NATIVE_URI) {\n                            successCallback(\"ms-appdata:///local/\" + storageFile.name);\n                        }\n                        else {\n                            successCallback(URL.createObjectURL(storageFile));\n                        }\n                }, function () {\n                    errorCallback(\"Can't access localStorage folder.\");\n                });\n            }\n        }\n        else {\n            if (targetHeight > 0 && targetWidth > 0) {\n                resizeImageBase64(successCallback, errorCallback, file, targetWidth, targetHeight);\n            } else {\n                fileIO.readBufferAsync(file).done(function (buffer) {\n                    var strBase64 =encodeToBase64String(buffer);\n                    successCallback(strBase64);\n                }, errorCallback);\n            }\n        }\n    }, function () {\n        errorCallback(\"User didn't choose a file.\");\n    });\n}\n\nfunction takePictureFromCamera(successCallback, errorCallback, args) {\n    // Check if necessary API available\n    if (!Windows.Media.Capture.CameraCaptureUI) {\n        takePictureFromCameraWP(successCallback, errorCallback, args);\n    } else {\n        takePictureFromCameraWindows(successCallback, errorCallback, args);\n    }\n}\n\nfunction takePictureFromCameraWP(successCallback, errorCallback, args) {\n    // We are running on WP8.1 which lacks CameraCaptureUI class\n    // so we need to use MediaCapture class instead and implement custom UI for camera\n    var destinationType = args[1],\n        targetWidth = args[3],\n        targetHeight = args[4],\n        encodingType = args[5],\n        saveToPhotoAlbum = args[9],\n        cameraDirection = args[11],\n        capturePreview = null,\n        cameraCaptureButton = null,\n        cameraCancelButton = null,\n        capture = null,\n        captureSettings = null,\n        CaptureNS = Windows.Media.Capture,\n        sensor = null;\n\n    function createCameraUI() {\n        // create style for take and cancel buttons\n        var buttonStyle = \"width:45%;padding: 10px 16px;font-size: 18px;line-height: 1.3333333;color: #333;background-color: #fff;border-color: #ccc; border: 1px solid transparent;border-radius: 6px; display: block; margin: 20px; z-index: 1000;border-color: #adadad;\";\n\n        // Create fullscreen preview\n        // z-order style element for capturePreview and cameraCancelButton elts\n        // is necessary to avoid overriding by another page elements, -1 sometimes is not enough\n        capturePreview = document.createElement(\"video\");\n        capturePreview.style.cssText = \"position: fixed; left: 0; top: 0; width: 100%; height: 100%; z-index: \" + (HIGHEST_POSSIBLE_Z_INDEX - 1) + \";\";\n\n        // Create capture button\n        cameraCaptureButton = document.createElement(\"button\");\n        cameraCaptureButton.innerText = \"Take\";\n        cameraCaptureButton.style.cssText = buttonStyle + \"position: fixed; left: 0; bottom: 0; margin: 20px; z-index: \" + HIGHEST_POSSIBLE_Z_INDEX + \";\";\n\n        // Create cancel button\n        cameraCancelButton = document.createElement(\"button\");\n        cameraCancelButton.innerText = \"Cancel\";\n        cameraCancelButton.style.cssText = buttonStyle + \"position: fixed; right: 0; bottom: 0; margin: 20px; z-index: \" + HIGHEST_POSSIBLE_Z_INDEX + \";\";\n\n        capture = new CaptureNS.MediaCapture();\n\n        captureSettings = new CaptureNS.MediaCaptureInitializationSettings();\n        captureSettings.streamingCaptureMode = CaptureNS.StreamingCaptureMode.video;\n    }\n\n    function continueVideoOnFocus() {\n        // if preview is defined it would be stuck, play it\n        if (capturePreview) {\n            capturePreview.play();\n        }\n    }\n\n    function startCameraPreview() {\n        // Search for available camera devices\n        // This is necessary to detect which camera (front or back) we should use\n        var DeviceEnum = Windows.Devices.Enumeration;\n        var expectedPanel = cameraDirection === 1 ? DeviceEnum.Panel.front : DeviceEnum.Panel.back;\n\n        // Add focus event handler to capture the event when user suspends the app and comes back while the preview is on\n        window.addEventListener(\"focus\", continueVideoOnFocus);\n\n        DeviceEnum.DeviceInformation.findAllAsync(DeviceEnum.DeviceClass.videoCapture).then(function (devices) {\n            if (devices.length <= 0) {\n                destroyCameraPreview();\n                errorCallback('Camera not found');\n                return;\n            }\n\n            devices.forEach(function(currDev) {\n                if (currDev.enclosureLocation.panel && currDev.enclosureLocation.panel == expectedPanel) {\n                    captureSettings.videoDeviceId = currDev.id;\n                }\n            });\n\n            captureSettings.photoCaptureSource = Windows.Media.Capture.PhotoCaptureSource.photo;\n\n            return capture.initializeAsync(captureSettings);\n        }).then(function () {\n\n            // create focus control if available\n            var VideoDeviceController = capture.videoDeviceController;\n            var FocusControl = VideoDeviceController.focusControl;\n\n            if (FocusControl.supported === true) {\n                capturePreview.addEventListener('click', function () {\n                    // Make sure function isn't called again before previous focus is completed\n                    if (this.getAttribute('clicked') === '1') {\n                        return false;\n                    } else {\n                        this.setAttribute('clicked', '1');\n                    }\n                    var preset = Windows.Media.Devices.FocusPreset.autoNormal;\n                    var parent = this;\n                    FocusControl.setPresetAsync(preset).done(function () {\n                        // set the clicked attribute back to '0' to allow focus again\n                        parent.setAttribute('clicked', '0');\n                    });\n                });\n            }\n\n            // msdn.microsoft.com/en-us/library/windows/apps/hh452807.aspx\n            capturePreview.msZoom = true;\n            capturePreview.src = URL.createObjectURL(capture);\n            capturePreview.play();\n\n            // Bind events to controls\n            sensor = Windows.Devices.Sensors.SimpleOrientationSensor.getDefault();\n            if (sensor !== null) {\n                sensor.addEventListener(\"orientationchanged\", onOrientationChange);\n            }\n\n            // add click events to capture and cancel buttons\n            cameraCaptureButton.addEventListener('click', onCameraCaptureButtonClick);\n            cameraCancelButton.addEventListener('click', onCameraCancelButtonClick);\n\n            // Change default orientation\n            if (sensor) {\n                setPreviewRotation(sensor.getCurrentOrientation());\n            } else {\n                setPreviewRotation(Windows.Graphics.Display.DisplayInformation.getForCurrentView().currentOrientation);\n            }\n\n            // Get available aspect ratios\n            var aspectRatios = getAspectRatios(capture);\n\n            // Couldn't find a good ratio\n            if (aspectRatios.length === 0) {\n                destroyCameraPreview();\n                errorCallback('There\\'s not a good aspect ratio available');\n                return;\n            }\n\n            // add elements to body\n            document.body.appendChild(capturePreview);\n            document.body.appendChild(cameraCaptureButton);\n            document.body.appendChild(cameraCancelButton);\n\n            if (aspectRatios.indexOf(DEFAULT_ASPECT_RATIO) > -1) {\n                return setAspectRatio(capture, DEFAULT_ASPECT_RATIO);\n            } else {\n                // Doesn't support 16:9 - pick next best\n                return setAspectRatio(capture, aspectRatios[0]);\n            }\n        }).done(null, function (err) {\n            destroyCameraPreview();\n            errorCallback('Camera intitialization error ' + err);\n        });\n    }\n\n    function destroyCameraPreview() {\n        // If sensor is available, remove event listener\n        if (sensor !== null) {\n            sensor.removeEventListener('orientationchanged', onOrientationChange);\n        }\n\n        // Pause and dispose preview element\n        capturePreview.pause();\n        capturePreview.src = null;\n\n        // Remove event listeners from buttons\n        cameraCaptureButton.removeEventListener('click', onCameraCaptureButtonClick);\n        cameraCancelButton.removeEventListener('click', onCameraCancelButtonClick);\n\n        // Remove the focus event handler\n        window.removeEventListener(\"focus\", continueVideoOnFocus);\n\n        // Remove elements\n        [capturePreview, cameraCaptureButton, cameraCancelButton].forEach(function (elem) {\n            if (elem /* && elem in document.body.childNodes */) {\n                document.body.removeChild(elem);\n            }\n        });\n\n        // Stop and dispose media capture manager\n        if (capture) {\n            capture.stopRecordAsync();\n            capture = null;\n        }\n    }\n\n    function captureAction() {\n\n        var encodingProperties,\n            fileName,\n            tempFolder = getAppData().temporaryFolder;\n\n        if (encodingType == Camera.EncodingType.PNG) {\n            fileName = 'photo.png';\n            encodingProperties = Windows.Media.MediaProperties.ImageEncodingProperties.createPng();\n        } else {\n            fileName = 'photo.jpg';\n            encodingProperties = Windows.Media.MediaProperties.ImageEncodingProperties.createJpeg();\n        }\n\n        tempFolder.createFileAsync(fileName, OptUnique)\n            .then(function(tempCapturedFile) {\n                return new WinJS.Promise(function (complete) {\n                    var photoStream = new Windows.Storage.Streams.InMemoryRandomAccessStream();\n                    var finalStream = new Windows.Storage.Streams.InMemoryRandomAccessStream();\n                    capture.capturePhotoToStreamAsync(encodingProperties, photoStream)\n                        .then(function() {\n                            return Windows.Graphics.Imaging.BitmapDecoder.createAsync(photoStream);\n                        })\n                        .then(function(dec) {\n                            finalStream.size = 0; // BitmapEncoder requires the output stream to be empty\n                            return Windows.Graphics.Imaging.BitmapEncoder.createForTranscodingAsync(finalStream, dec);\n                        })\n                        .then(function(enc) {\n                            // We need to rotate the photo wrt sensor orientation\n                            enc.bitmapTransform.rotation = orientationToRotation(sensor.getCurrentOrientation());\n                            return enc.flushAsync();\n                        })\n                        .then(function() {\n                            return tempCapturedFile.openAsync(Windows.Storage.FileAccessMode.readWrite);\n                        })\n                        .then(function(fileStream) {\n                            return Windows.Storage.Streams.RandomAccessStream.copyAndCloseAsync(finalStream, fileStream);\n                        })\n                        .done(function() {\n                            photoStream.close();\n                            finalStream.close();\n                            complete(tempCapturedFile);\n                        }, function() {\n                            photoStream.close();\n                            finalStream.close();\n                            throw new Error(\"An error has occured while capturing the photo.\");\n                        });\n                });\n            })\n            .done(function(capturedFile) {\n                destroyCameraPreview();\n                savePhoto(capturedFile, {\n                    destinationType: destinationType,\n                    targetHeight: targetHeight,\n                    targetWidth: targetWidth,\n                    encodingType: encodingType,\n                    saveToPhotoAlbum: saveToPhotoAlbum\n                }, successCallback, errorCallback);\n            }, function(err) {\n                destroyCameraPreview();\n                errorCallback(err);\n            });\n    }\n\n    function getAspectRatios(capture) {\n        var videoDeviceController = capture.videoDeviceController;\n        var photoAspectRatios = videoDeviceController.getAvailableMediaStreamProperties(CapMSType.photo).map(function (element) {\n            return (element.width / element.height).toFixed(1);\n        }).filter(function (element, index, array) { return (index === array.indexOf(element)); });\n\n        var videoAspectRatios = videoDeviceController.getAvailableMediaStreamProperties(CapMSType.videoRecord).map(function (element) {\n            return (element.width / element.height).toFixed(1);\n        }).filter(function (element, index, array) { return (index === array.indexOf(element)); });\n\n        var videoPreviewAspectRatios = videoDeviceController.getAvailableMediaStreamProperties(CapMSType.videoPreview).map(function (element) {\n            return (element.width / element.height).toFixed(1);\n        }).filter(function (element, index, array) { return (index === array.indexOf(element)); });\n\n        var allAspectRatios = [].concat(photoAspectRatios, videoAspectRatios, videoPreviewAspectRatios);\n\n        var aspectObj = allAspectRatios.reduce(function (map, item) {\n            if (!map[item]) {\n                map[item] = 0;\n            }\n            map[item]++;\n            return map;\n        }, {});\n\n        return Object.keys(aspectObj).filter(function (k) {\n            return aspectObj[k] === 3;\n        });\n    }\n\n    function setAspectRatio(capture, aspect) {\n        // Max photo resolution with desired aspect ratio\n        var videoDeviceController = capture.videoDeviceController;\n        var photoResolution = videoDeviceController.getAvailableMediaStreamProperties(CapMSType.photo)\n            .filter(function (elem) {\n                return ((elem.width / elem.height).toFixed(1) === aspect);\n            })\n            .reduce(function (prop1, prop2) {\n                return (prop1.width * prop1.height) > (prop2.width * prop2.height) ? prop1 : prop2;\n            });\n\n        // Max video resolution with desired aspect ratio\n        var videoRecordResolution = videoDeviceController.getAvailableMediaStreamProperties(CapMSType.videoRecord)\n            .filter(function (elem) {\n                return ((elem.width / elem.height).toFixed(1) === aspect);\n            })\n            .reduce(function (prop1, prop2) {\n                return (prop1.width * prop1.height) > (prop2.width * prop2.height) ? prop1 : prop2;\n            });\n\n        // Max video preview resolution with desired aspect ratio\n        var videoPreviewResolution = videoDeviceController.getAvailableMediaStreamProperties(CapMSType.videoPreview)\n            .filter(function (elem) {\n                return ((elem.width / elem.height).toFixed(1) === aspect);\n            })\n            .reduce(function (prop1, prop2) {\n                return (prop1.width * prop1.height) > (prop2.width * prop2.height) ? prop1 : prop2;\n            });\n\n        return videoDeviceController.setMediaStreamPropertiesAsync(CapMSType.photo, photoResolution)\n            .then(function () {\n                return videoDeviceController.setMediaStreamPropertiesAsync(CapMSType.videoPreview, videoPreviewResolution);\n            })\n            .then(function () {\n                return videoDeviceController.setMediaStreamPropertiesAsync(CapMSType.videoRecord, videoRecordResolution);\n            });\n    }\n\n    /**\n     * When Capture button is clicked, try to capture a picture and return\n     */\n    function onCameraCaptureButtonClick() {\n        // Make sure user can't click more than once\n        if (this.getAttribute('clicked') === '1') {\n            return false;\n        } else {\n            this.setAttribute('clicked', '1');\n        }\n        captureAction();\n    }\n\n    /**\n     * When Cancel button is clicked, destroy camera preview and return with error callback\n     */\n    function onCameraCancelButtonClick() {\n        // Make sure user can't click more than once\n        if (this.getAttribute('clicked') === '1') {\n            return false;\n        } else {\n            this.setAttribute('clicked', '1');\n        }\n        destroyCameraPreview();\n        errorCallback('no image selected');\n    }\n\n    /**\n     * When the phone orientation change, get the event and change camera preview rotation\n     * @param  {Object} e - SimpleOrientationSensorOrientationChangedEventArgs\n     */\n    function onOrientationChange(e) {\n        setPreviewRotation(e.orientation);\n    }\n\n    /**\n     * Converts SimpleOrientation to a VideoRotation to remove difference between camera sensor orientation\n     * and video orientation\n     * @param  {number} orientation - Windows.Devices.Sensors.SimpleOrientation\n     * @return {number} - Windows.Media.Capture.VideoRotation\n     */\n    function orientationToRotation(orientation) {\n        // VideoRotation enumerable and BitmapRotation enumerable have the same values\n        // https://msdn.microsoft.com/en-us/library/windows/apps/windows.media.capture.videorotation.aspx\n        // https://msdn.microsoft.com/en-us/library/windows/apps/windows.graphics.imaging.bitmaprotation.aspx\n\n        switch (orientation) {\n            // portrait\n            case Windows.Devices.Sensors.SimpleOrientation.notRotated:\n                return Windows.Media.Capture.VideoRotation.clockwise90Degrees;\n            // landscape\n            case Windows.Devices.Sensors.SimpleOrientation.rotated90DegreesCounterclockwise:\n                return Windows.Media.Capture.VideoRotation.none;\n            // portrait-flipped (not supported by WinPhone Apps)\n            case Windows.Devices.Sensors.SimpleOrientation.rotated180DegreesCounterclockwise:\n                // Falling back to portrait default\n                return Windows.Media.Capture.VideoRotation.clockwise90Degrees;\n            // landscape-flipped\n            case Windows.Devices.Sensors.SimpleOrientation.rotated270DegreesCounterclockwise:\n                return Windows.Media.Capture.VideoRotation.clockwise180Degrees;\n            // faceup & facedown\n            default:\n                // Falling back to portrait default\n                return Windows.Media.Capture.VideoRotation.clockwise90Degrees;\n        }\n    }\n\n    /**\n     * Rotates the current MediaCapture's video\n     * @param {number} orientation - Windows.Devices.Sensors.SimpleOrientation\n     */\n    function setPreviewRotation(orientation) {\n        capture.setPreviewRotation(orientationToRotation(orientation));\n    }\n\n    try {\n        createCameraUI();\n        startCameraPreview();\n    } catch (ex) {\n        errorCallback(ex);\n    }\n}\n\nfunction takePictureFromCameraWindows(successCallback, errorCallback, args) {\n    var destinationType = args[1],\n        targetWidth = args[3],\n        targetHeight = args[4],\n        encodingType = args[5],\n        allowCrop = !!args[7],\n        saveToPhotoAlbum = args[9],\n        WMCapture = Windows.Media.Capture,\n        cameraCaptureUI = new WMCapture.CameraCaptureUI();\n\n    cameraCaptureUI.photoSettings.allowCropping = allowCrop;\n\n    if (encodingType == Camera.EncodingType.PNG) {\n        cameraCaptureUI.photoSettings.format = WMCapture.CameraCaptureUIPhotoFormat.png;\n    } else {\n        cameraCaptureUI.photoSettings.format = WMCapture.CameraCaptureUIPhotoFormat.jpeg;\n    }\n\n    // decide which max pixels should be supported by targetWidth or targetHeight.\n    var maxRes = null;\n    var UIMaxRes = WMCapture.CameraCaptureUIMaxPhotoResolution;\n    var totalPixels = targetWidth * targetHeight;\n\n    if (targetWidth == -1 && targetHeight == -1) {\n        maxRes = UIMaxRes.highestAvailable;\n    }\n    // Temp fix for CB-10539\n    /*else if (totalPixels <= 320 * 240) {\n        maxRes = UIMaxRes.verySmallQvga;\n    }*/\n    else if (totalPixels <= 640 * 480) {\n        maxRes = UIMaxRes.smallVga;\n    } else if (totalPixels <= 1024 * 768) {\n        maxRes = UIMaxRes.mediumXga;\n    } else if (totalPixels <= 3 * 1000 * 1000) {\n        maxRes = UIMaxRes.large3M;\n    } else if (totalPixels <= 5 * 1000 * 1000) {\n        maxRes = UIMaxRes.veryLarge5M;\n    } else {\n        maxRes = UIMaxRes.highestAvailable;\n    }\n\n    cameraCaptureUI.photoSettings.maxResolution = maxRes;\n\n    var cameraPicture;\n\n    // define focus handler for windows phone 10.0\n    var savePhotoOnFocus = function () {\n        window.removeEventListener(\"focus\", savePhotoOnFocus);\n        // call only when the app is in focus again\n        savePhoto(cameraPicture, {\n            destinationType: destinationType,\n            targetHeight: targetHeight,\n            targetWidth: targetWidth,\n            encodingType: encodingType,\n            saveToPhotoAlbum: saveToPhotoAlbum\n        }, successCallback, errorCallback);\n    };\n\n    // if windows phone 10, add and delete focus eventHandler to capture the focus back from cameraUI to app\n    if (navigator.appVersion.indexOf('Windows Phone 10.0') >= 0) {\n        window.addEventListener(\"focus\", savePhotoOnFocus);\n    }\n\n    cameraCaptureUI.captureFileAsync(WMCapture.CameraCaptureUIMode.photo).done(function (picture) {\n        if (!picture) {\n            errorCallback(\"User didn't capture a photo.\");\n            // Remove the focus handler if present\n            window.removeEventListener(\"focus\", savePhotoOnFocus);\n            return;\n        }\n        cameraPicture = picture;\n\n        // If not windows 10, call savePhoto() now. If windows 10, wait for the app to be in focus again\n        if (navigator.appVersion.indexOf('Windows Phone 10.0') < 0) {\n            savePhoto(cameraPicture, {\n                destinationType: destinationType,\n                targetHeight: targetHeight,\n                targetWidth: targetWidth,\n                encodingType: encodingType,\n                saveToPhotoAlbum: saveToPhotoAlbum\n            }, successCallback, errorCallback);\n        }\n    }, function () {\n        errorCallback(\"Fail to capture a photo.\");\n        window.removeEventListener(\"focus\", savePhotoOnFocus);\n    });\n}\n\nfunction savePhoto(picture, options, successCallback, errorCallback) {\n    // success callback for capture operation\n    var success = function(picture) {\n        if (options.destinationType == Camera.DestinationType.FILE_URI || options.destinationType == Camera.DestinationType.NATIVE_URI) {\n            if (options.targetHeight > 0 && options.targetWidth > 0) {\n                resizeImage(successCallback, errorCallback, picture, options.targetWidth, options.targetHeight, options.encodingType);\n            } else {\n                picture.copyAsync(getAppData().localFolder, picture.name, OptUnique).done(function (copiedFile) {\n                    successCallback(\"ms-appdata:///local/\" + copiedFile.name);\n                },errorCallback);\n            }\n        } else {\n            if (options.targetHeight > 0 && options.targetWidth > 0) {\n                resizeImageBase64(successCallback, errorCallback, picture, options.targetWidth, options.targetHeight);\n            } else {\n                fileIO.readBufferAsync(picture).done(function(buffer) {\n                    var strBase64 = encodeToBase64String(buffer);\n                    picture.deleteAsync().done(function() {\n                        successCallback(strBase64);\n                    }, function(err) {\n                        errorCallback(err);\n                    });\n                }, errorCallback);\n            }\n        }\n    };\n\n    if (!options.saveToPhotoAlbum) {\n        success(picture);\n        return;\n    } else {\n        var savePicker = new Windows.Storage.Pickers.FileSavePicker();\n        var saveFile = function(file) {\n            if (file) {\n                // Prevent updates to the remote version of the file until we're done\n                Windows.Storage.CachedFileManager.deferUpdates(file);\n                picture.moveAndReplaceAsync(file)\n                    .then(function() {\n                        // Let Windows know that we're finished changing the file so\n                        // the other app can update the remote version of the file.\n                        return Windows.Storage.CachedFileManager.completeUpdatesAsync(file);\n                    })\n                    .done(function(updateStatus) {\n                        if (updateStatus === Windows.Storage.Provider.FileUpdateStatus.complete) {\n                            success(picture);\n                        } else {\n                            errorCallback(\"File update status is not complete.\");\n                        }\n                    }, errorCallback);\n            } else {\n                errorCallback(\"Failed to select a file.\");\n            }\n        };\n        savePicker.suggestedStartLocation = pickerLocId.picturesLibrary;\n\n        if (options.encodingType === Camera.EncodingType.PNG) {\n            savePicker.fileTypeChoices.insert(\"PNG\", [\".png\"]);\n            savePicker.suggestedFileName = \"photo.png\";\n        } else {\n            savePicker.fileTypeChoices.insert(\"JPEG\", [\".jpg\"]);\n            savePicker.suggestedFileName = \"photo.jpg\";\n        }\n\n        // If Windows Phone 8.1 use pickSaveFileAndContinue()\n        if (navigator.appVersion.indexOf('Windows Phone 8.1') >= 0) {\n            /*\n                Need to add and remove an event listener to catch activation state\n                Using FileSavePicker will suspend the app and it's required to catch the pickSaveFileContinuation\n                https://msdn.microsoft.com/en-us/library/windows/apps/xaml/dn631755.aspx\n            */\n            var fileSaveHandler = function(eventArgs) {\n                if (eventArgs.kind === Windows.ApplicationModel.Activation.ActivationKind.pickSaveFileContinuation) {\n                    var file = eventArgs.file;\n                    saveFile(file);\n                    webUIApp.removeEventListener(\"activated\", fileSaveHandler);\n                }\n            };\n            webUIApp.addEventListener(\"activated\", fileSaveHandler);\n            savePicker.pickSaveFileAndContinue();\n        } else {\n            savePicker.pickSaveFileAsync()\n                .done(saveFile, errorCallback);\n        }\n    }\n}\n\nrequire(\"cordova/exec/proxy\").add(\"Camera\",module.exports);\n"}